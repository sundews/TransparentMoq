<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net462;netstandard2.0;netstandard2.1</TargetFrameworks>
    <PackageReleaseNotes>4.18.2 - https://github.com/moq/moq4/releases/tag/v4.18.2
4.16.0 - https://github.com/moq/moq4/releases/tag/v4.16.0
4.15.2 - https://github.com/moq/moq4/releases/tag/v4.15.2
1.0 - Initial release
    </PackageReleaseNotes>
    <Description>
With inspiration taken from mocking frameworks like NSubstitute, FakeItEasy and JustMock this package adds some of the syntactic advantages of these frameworks to Moq.

TransparentMoq allows to use Moq without having to store mocks in Mock&lt;T&gt; variables, instead a T variable can be used. This also removes the need to pass mocks with ".Object" everywhere as they can be passed directly.

The library provides extension methods for most (if not all) of Moq's methods, so they can be called directly on the T variable.
Examples:
Instead of
private Mock&lt;IFileSystem&gt; fileSystem = new Mock&lt;IFileSystem&gt;();
Write
private IFileSystem fileSystem = New.Mock&lt;IFileSystem&gt;();

Instead of
MethodThatTakesFileSystem(fileSystem.Object);
write
MethodThatTakesFileSystem(fileSystem);

To arrange a mock everything remains the same:
fileSystem.Setup(x =&gt; x.Exists(It.IsAny&lt;string&gt;())).Returns(true);</Description>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="TransparentMoq\**" />
    <EmbeddedResource Remove="TransparentMoq\**" />
    <None Remove="TransparentMoq\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Moq" Version="4.18.3" />
    <PackageReference Include="Sundew.Packaging.Publish" Version="8.1.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>
